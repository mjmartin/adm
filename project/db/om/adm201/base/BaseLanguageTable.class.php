<?php
/*************************************************************************************************************************
**************************************************************************************************************************
**************************************************************************************************************************

WARNING!!!

THIS FILE SHOULD NOT BE EDITED - IT WILL BE AUTOGENERATED EACH TIME THE MODELS ARE BUILT!

OVERRIDE SETTINGS IN MODEL NOT THE BASEMODEL

**************************************************************************************************************************
**************************************************************************************************************************
*************************************************************************************************************************/

namespace project\db\om\adm201\base;

/**
 * BaseLanguageTable class 
 * 
 * BaseLanguageTable
 * 
 * @author Christopher Beck <cwbeck@gmail.com>
 * @version SVN: $id
 * @package adm201
 * @subpackage base
 */
class BaseLanguageTable extends \nano\core\db\om\BaseTable {

	protected $modelName = 'Language';
	protected $primaryKey = array('code','key');
	protected $dbConfig = 'default';
	protected $dbName = 'adm201';
	protected $tableName = 'Languages';
	protected $fields = array(
		'code' => array(
			'mysql_type' => 'char(7)',
			'mysql_is_null' => 'NO',
			'mysql_key' => 'PRI',
			'mysql_default' => '',
			'mysql_extra' => '',
			'is_foreign_reference' => false,
			'use_model' => 'Language',
			'use_database' => 'adm201',
			'set_function' => 'setCode',
			'validation_function' => 'validateCode',
			'get_function' => 'getCode',
		),
		'key' => array(
			'mysql_type' => 'char(255)',
			'mysql_is_null' => 'NO',
			'mysql_key' => 'PRI',
			'mysql_default' => '',
			'mysql_extra' => '',
			'is_foreign_reference' => false,
			'use_model' => 'Language',
			'use_database' => 'adm201',
			'set_function' => 'setKey',
			'validation_function' => 'validateKey',
			'get_function' => 'getKey',
		),
		'value' => array(
			'mysql_type' => 'text',
			'mysql_is_null' => 'NO',
			'mysql_key' => '',
			'mysql_default' => '',
			'mysql_extra' => '',
			'is_foreign_reference' => false,
			'use_model' => 'Language',
			'use_database' => 'adm201',
			'set_function' => 'setValue',
			'validation_function' => 'validateValue',
			'get_function' => 'getValue',
		)
	);
	protected $newFieldNameMap = array(
		'code' => 'code',
		'key' => 'key',
		'value' => 'value'
	);

	public function retrieveByPk($code,$key) {
		$query = new \nano\core\db\core\SelectQuery();
		$query->from('Languages')->where('`Languages`.`code` = "'.addslashes($code).'" AND `Languages`.`key` = "'.addslashes($key).'" LIMIT 1');
		$results = $this->doSelect($query);
		return isset($results[0]['Language'])? $results[0]['Language'] : null;
	}

}